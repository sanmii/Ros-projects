<?xml version="1.0" ?>
<launch>

  <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="camera_left_broadcaster" args="0 0 0 0 0 0 /world /color" />   -->
  <!-- q= has the rpy set in the xacro file rpy=0 1.061379 1.570791-->
  <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="camera_left_broadcaster" args="-0.06 -0.29 0.410304 1.570791 1.061379 0 /world /color" />  -->
  <!-- q3=q*roty(pi/2)*rotz(-pi/2) rotations neede between the sensor frame and the camera frame - they should be included in the model but are not...-->
  <node pkg="tf2_ros" type="static_transform_publisher" name="camera_left_broadcaster" args="-0.06 -0.29 0.410304  0.0 0.0000 -2.6322 /world /color" />

  <arg name="rviz"  default="true"/>
  <!-- marker detector -->
  <!-- aruco_ros node is used to detect markers -->
  <!-- ros wiki page: http://wiki.ros.org/aruco_ros -->
  <!-- external page: http://www.uco.es/investiga/grupos/ava/node/26 -->




  <include file = "$(find gazebo_sensors_tutorial)/launch/aruco_single.launch">
    <arg name="node_name"    value="aruco_single_102"/>
    <arg name="markerId"     value="102"/>
    <arg name="markerSize"   value="0.03"/>
    <arg name="marker_frame" value="aruco_102"/>
    <arg name="reference_frame"    value="/world"/>
    <arg name="camera_info"       default="/left_rs200/camera/color/camera_info"/>
    <arg name="image"             default="/left_rs200//camera/color/image_raw"/>
    <arg name="camera_frame"      default="/color"/>
  </include>
  <include file = "$(find gazebo_sensors_tutorial)/launch/aruco_single.launch">
    <arg name="node_name"    value="aruco_single_103"/>
    <arg name="markerId"     value="103"/>
    <arg name="markerSize"   value="0.03"/>
    <arg name="marker_frame" value="aruco_103"/>
    <arg name="reference_frame"    value="/world"/>
    <arg name="camera_info"       default="/left_rs200/camera/color/camera_info"/>
    <arg name="image"             default="/left_rs200//camera/color/image_raw"/>
    <arg name="camera_frame"      default="/color"/>
  </include>
  <include file = "$(find gazebo_sensors_tutorial)/launch/aruco_single.launch">
    <arg name="node_name"    value="aruco_single_201"/>
    <arg name="markerId"     value="201"/>
    <arg name="marker_frame" value="aruco_201"/>
    <arg name="reference_frame"    value="/world"/>
    <arg name="camera_info"       default="/left_rs200/camera/color/camera_info"/>
    <arg name="image"             default="/left_rs200//camera/color/image_raw"/>
    <arg name="camera_frame"      default="/color"/>
  </include>

  <node pkg="gazebo_sensors_tutorial" type="aruco_frames_detection" name="aruco_frames_detection"/>

<!--
  <arg name="markerSize"      default="0.03"/>
  <arg name="referenceFrame"       default=""/>
  <arg name="cameraInfo"     default="/left_rs200/camera/color/camera_info"/>
  <arg name="image"           default="/left_rs200//camera/color/image_rect_color"/>
  <arg name="cameraFrame"    default="/color"/>

  <node pkg="aruco_ros" type="marker_publisher" name="aruco_marker_publisher">
    <remap from="/camera_info" to="$(arg cameraInfo)" />
    <remap from="/image" to="$(arg image)" />
    <param name="image_is_rectified" value="True"/>
    <param name="marker_size"        value="$(arg markerSize)"/>
    <param name="reference_frame"    value="$(arg referenceFrame)"/>
    <param name="camera_frame"       value="$(arg cameraFrame)"/>
  </node>
-->

  <!-- image_proc node sits between the camera driver and vision processing nodes. -->
  <!-- image_proc removes camera distortion from the raw image stream -->
  <!-- requires to set the ROS_NAMESPACE to the camera publishing the images, camera1 in our case -->
  <!-- See http://wiki.ros.org/image_proc for more info -->
  <env name="ROS_NAMESPACE" value="camera_left" />
  <node name="image_proc" pkg="image_proc" type="image_proc" />

  <!-- marker detector -->
  <!-- aruco_ros node is used to detect markers -->
  <!-- ros wiki page: http://wiki.ros.org/aruco_ros -->
  <!-- external page: http://www.uco.es/investiga/grupos/ava/node/26 -->



  <!-- Show in Rviz   -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find gazebo_sensors_tutorial)/launch/one_realsense_chessboard.rviz"/>
</launch>
